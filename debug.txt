Linking files to become: libyoga.a
/root/theos//toolchain/linux/iphone/bin/armv7-apple-darwin11-libtool -framework Foundation -framework CoreFoundation -framework UIKit -framework CoreGraphics     -syslibroot "/root/theos/sdks/iPhoneOS9.2.sdk" -L/root/theos/lib -L/root/theos/vendor/lib  -o ./build/final/libyoga.a ./build/intermediate/yoga/YGNodeList.c.o ./build/intermediate/yoga/Yoga.c.o
# GNU Make 4.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2014 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Mon Mar 13 20:56:12 2017

# Variables

# 'override' directive
GNUMAKEFLAGS := 
# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# makefile (from 'makefiles/lib/common.mk', line 44)
BASIC_COMPILER_FLAGS = -isysroot "/root/theos/sdks/iPhoneOS9.2.sdk" $(COMPILER_INCLUDE)
# default
.SHELLFLAGS := -c
# default
CWEAVE = cweave
# automatic
?D = $(patsubst %/,%,$(dir $?))
# makefile (from 'makefiles/yoga.mk', line 8)
YOGA_C_COMPILER_FLAGS = -std=gnu99
# makefile (from 'makefiles/lib/common.mk', line 5)
CC_COMPILER = $(THEOS)/toolchain/linux/iphone/bin/armv7-apple-darwin11-clang $(BASIC_COMPILER_FLAGS)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /mnt/c/Dev/XcodeProjectDumper
# makefile
SHELL = /bin/sh
# default
RM = rm -f
# default
CO = co
# environment
_ = /usr/bin/make
# default
PREPROCESS.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -F
# environment
SUDO_COMMAND = /bin/su
# environment
THEOS_DEVICE_IP = 192.168.1.7
# default
LINK.m = $(OBJC) $(OBJCFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# default
LINK.o = $(CC) $(LDFLAGS) $(TARGET_ARCH)
# default
OUTPUT_OPTION = -o $@
# makefile (from 'makefiles/lib/common.mk', line 85)
L_OUTPUT_DIR = ./build/final
# default
COMPILE.cpp = $(COMPILE.cc)
# makefile (from 'makefiles/lib/common.mk', line 1)
MAKEFILE_LIST :=  makefiles/yoga.mk makefiles/lib/common.mk
# makefile (from 'makefiles/lib/common.mk', line 42)
COMPILER_INCLUDE = -v -I$(INCLUDE_BUILD_HEADERS) -I/root/theos/include/iphone/ -I/root/theos/include/ -I/root/theos/vendor/include -I/root/theos/include/_fallback  -I/root/theos/sdks/iPhoneOS9.2.sdk/usr/include/
# environment
USERNAME = root
# default
LINK.p = $(PC) $(PFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (from 'makefiles/lib/common.mk', line 75)
SOURCES := $(subst ,, )
# makefile (from 'makefiles/lib/common.mk', line 88)
OBJ_DIR = ./build/intermediate
# makefile (from 'makefiles/yoga.mk', line 20)
YOGA_ALL_OBJS := ./build/intermediate/yoga/ ./build/intermediate/yoga/YGNodeList.c.o ./build/intermediate/yoga/Yoga.c.o ./build/intermediate/yoga/ 
# makefile (from 'makefiles/yoga.mk', line 5)
YOGA_OBJ_DIR := ./build/intermediate/yoga
# default
CC = cc
# default
CHECKOUT,v = +$(if $(wildcard $@),,$(CO) $(COFLAGS) $< $@)
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
THEOS_DEVICE_PORT = 22
# default
CPP = $(CC) -E
# makefile (from 'makefiles/yoga.mk', line 13)
YOGA_SOURCE_FILES := /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/YGNodeList.c /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.c
# makefile (from 'makefiles/lib/common.mk', line 61)
THEOS_INCLUDES = -I/root/theos/include/iphone/ -I/root/theos/include/ -I/root/theos/vendor/include -I/root/theos/include/_fallback -isysroot "/root/theos/sdks/iPhoneOS9.2.sdk"
# default
LINK.cc = $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (from 'makefiles/lib/common.mk', line 17)
INTERMEDIATE_DIR = $(OUTPUT_DIR)/intermediate/
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /root/theos/:/root/theos//toolchain/linux/iphone/bin:/root/theos//bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
# default
LD = ld
# default
TEXI2DVI = texi2dvi
# default
YACC = yacc
# makefile (from 'makefiles/yoga.mk', line 14)
YOGA_C_FILES := /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/YGNodeList.c /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.c
# default
COMPILE.mod = $(M2C) $(M2FLAGS) $(MODFLAGS) $(TARGET_ARCH)
# default
ARFLAGS = rv
# default
LINK.r = $(FC) $(FFLAGS) $(RFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (from 'makefiles/lib/common.mk', line 6)
CXX_COMPILER = $(THEOS)/toolchain/linux/iphone/bin/armv7-apple-darwin11-clang++ $(BASIC_COMPILER_FLAGS) 
# default
LINT = lint
# default
COMPILE.f = $(FC) $(FFLAGS) $(TARGET_ARCH) -c
# default
LINT.c = $(LINT) $(LINTFLAGS) $(CPPFLAGS) $(TARGET_ARCH)
# default
YACC.m = $(YACC) $(YFLAGS)
# makefile (from 'makefiles/yoga.mk', line 6)
YOGA_COMPILER_FLAGS = -stdlib=libc++ -fmodules -fobjc-arc -Wbool-conversion -Wconstant-conversion -Werror=deprecated-objc-isa-usage -Wempty-body -Wenum-conversion -Wint-conversion -Werror=objc-root-class -Wunreachable-code -Wduplicate-method-match -DOBJC_OLD_DISPATCH_PROTOTYPES=0 -Wshadow -Wextra -Wall
# default
YACC.y = $(YACC) $(YFLAGS)
# makefile (from 'makefiles/yoga.mk', line 40)
test := ./build/intermediate/yoga/YGNodeList.c.o ./build/intermediate/yoga/Yoga.c.o
# default
AR = ar
# makefile (from 'makefiles/yoga.mk', line 7)
YOGA_LINKER_FLAGS = 
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# makefile (from 'makefiles/yoga.mk', line 11)
YOGA_COPY_HEADERS_RESULT = $(addprefix $(YOGA_COPY_HEADERS_DEST)/, $(notdir $(YOGA_COPY_HEADERS_SRC)))
# default
TANGLE = tangle
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# default
GET = get
# automatic
%F = $(notdir $%)
# default
COMPILE.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# default
CTANGLE = ctangle
# default
.LIBPATTERNS = lib%.so lib%.a
# default
LINK.C = $(LINK.cc)
# environment
PWD = /mnt/c/Dev/XcodeProjectDumper
# makefile (from 'makefiles/lib/common.mk', line 68)
FRAMEWORKS = -framework Foundation -framework CoreFoundation -framework UIKit -framework CoreGraphics    
# makefile (from 'makefiles/yoga.mk', line 18)
YOGA_CXX_FILES := 
# default
LINK.S = $(CC) $(ASFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_MACH)
# default
PREPROCESS.r = $(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -F
# default
LINK.c = $(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# makefile (from 'makefiles/lib/common.mk', line 69)
LINKER_FLAGS = -syslibroot "/root/theos/sdks/iPhoneOS9.2.sdk" -L/root/theos/lib -L/root/theos/vendor/lib 
# default
LINK.s = $(CC) $(ASFLAGS) $(LDFLAGS) $(TARGET_MACH)
# environment
HOME = /root
# makefile (from 'makefiles/lib/common.mk', line 81)
L_INPUT := 
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
SUDO_USER = root
# environment
LOGNAME = root
# environment
SUDO_GID = 0
# automatic
^D = $(patsubst %/,%,$(dir $^))
# makefile (from 'makefiles/yoga.mk', line 10)
YOGA_COPY_HEADERS_DEST = $(realpath $(INCLUDE_BUILD_HEADERS)/../include/yoga)
# environment
MAKELEVEL := 0
# default
COMPILE.m = $(OBJC) $(OBJCFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := libyoga.a
# makefile (from 'makefiles/lib/common.mk', line 55)
COMPILER_FLAGS = -std=c++14 -fobjc-arc -Os -g -fmodules -Wextra -Wall -Wno-sign-conversion -Wno-infinite-recursion -Wno-missing-field-initializers -Wno-missing-prototypes      -Werror=return-type -Wunreachable-code -Wno-implicit-atomic-properties -Werror=deprecated-objc-isa-usage -Werror=objc-root-class -Wno-arc-repeated-use-of-weak -Wduplicate-method-match -Wmissing-braces -Wparentheses -Wswitch -Wunused-function -Wno-unused-label -Wno-unused-parameter -Wunused-variable -Wunused-value -Wempty-body -Wconditional-uninitialized -Wno-unknown-pragmas -Wshadow -Wno-four-char-constants -Wno-conversion -Wconstant-conversion -Wint-conversion -Wbool-conversion -Wenum-conversion -Wshorten-64-to-32 -Wpointer-sign -Wno-newline-eof -Wno-selector -Wno-strict-selector-match -Wundeclared-selector -Wno-deprecated-implementations -Wnon-modular-include-in-framework-module -Werror=non-modular-include-in-framework-module -Wno-trigraphs -Wprotocol -Wdeprecated-declarations -Wextra -Wall -fstrict-aliasing -fasm-blocks -fmodules -fmodules-prune-interval=86400 -fmodules-prune-after=345600 -fpascal-strings -fobjc-abi-version=2 -fobjc-legacy-dispatch
# environment
SHLVL = 1
# default
AS = as
# default
PREPROCESS.S = $(CC) -E $(CPPFLAGS)
# environment
SUDO_UID = 0
# default
COMPILE.p = $(PC) $(PFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# default
MAKE_VERSION := 4.1
# environment
USER = root
# default
FC = f77
# makefile
.DEFAULT_GOAL := /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGEnums.h
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
WEAVE = weave
# default
MAKE_COMMAND := make
# default
LINK.cpp = $(LINK.cc)
# default
F77 = $(FC)
# environment
OLDPWD = /root
# default
.VARIABLES := 
# default
PC = pc
# automatic
*F = $(notdir $*)
# default
COMPILE.def = $(M2C) $(M2FLAGS) $(DEFFLAGS) $(TARGET_ARCH)
# makefile (from 'makefiles/lib/common.mk', line 9)
LINKER = $(THEOS)/toolchain/linux/iphone/bin/armv7-apple-darwin11-libtool
# default
LEX = lex
# makefile (from 'makefiles/lib/common.mk', line 25)
NODE_MODULES = ../node_modules
# makefile (from 'makefiles/lib/common.mk', line 22)
ARCH = armv7 
# makefile
MAKEFLAGS = p
# environment
MFLAGS = -p
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'makefiles/yoga.mk', line 15)
YOGA_C_OBJS := ./build/intermediate/yoga/YGNodeList.c.o ./build/intermediate/yoga/Yoga.c.o
# environment
MAIL = /var/mail/root
# default
LEX.l = $(LEX) $(LFLAGS) -t
# default
LEX.m = $(LEX) $(LFLAGS) -t
# makefile (from 'makefiles/yoga.mk', line 19)
YOGA_CXX_OBJS := ./build/intermediate/yoga/
# makefile (from 'makefiles/lib/common.mk', line 78)
OBJS_DIR = $(abspath ./build/intermediate/$(FOLDER))
# makefile (from 'makefiles/lib/common.mk', line 30)
REACT-NATIVE := /mnt/c/Dev/node_modules/react-native
# automatic
+D = $(patsubst %/,%,$(dir $+))
# default
COMPILE.r = $(FC) $(FFLAGS) $(RFLAGS) $(TARGET_ARCH) -c
# makefile (from 'makefiles/lib/common.mk', line 15)
OUTPUT_DIR = ./build
# makefile (from 'makefiles/lib/common.mk', line 90)
COMPILER_ALL_FLAGS = $(COMPILER_FLAGS) $(COMPILER_INCLUDE) -arch $(ARCH)
# automatic
+F = $(notdir $+)
# default
M2C = m2c
# makefile (from 'makefiles/lib/common.mk', line 84)
L_OUTPUT = $(PROJECT_NAME).a
# makefile (from 'makefiles/yoga.mk', line 9)
YOGA_COPY_HEADERS_SRC = ./node_modules/react-native/React/../ReactCommon/yoga/yoga/YGEnums.h ./node_modules/react-native/React/../ReactCommon/yoga/yoga/YGMacros.h ./node_modules/react-native/React/../ReactCommon/yoga/yoga/Yoga.h  
# makefile (from 'makefiles/lib/common.mk', line 3)
COMPILER = $(THEOS)/toolchain/linux/iphone/bin/armv7-apple-darwin11-clang $(BASIC_COMPILER_FLAGS)
# default
MAKEFILES := 
# default
COMPILE.cc = $(CXX) $(CXXFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# automatic
<F = $(notdir $<)
# makefile (from 'makefiles/lib/common.mk', line 18)
INCLUDE_BUILD_HEADERS = $(INTERMEDIATE_DIR)/include/
# makefile (from 'makefiles/yoga.mk', line 16)
YOGA_OBJC_FILES := 
# default
CXX = g++
# default
COFLAGS = 
# makefile (from 'makefiles/yoga.mk', line 17)
YOGA_OBJC_OBJS := ./build/intermediate/yoga/
# default
COMPILE.C = $(COMPILE.cc)
# automatic
^F = $(notdir $^)
# default
COMPILE.S = $(CC) $(ASFLAGS) $(CPPFLAGS) $(TARGET_MACH) -c
# default
LINK.F = $(FC) $(FFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# default
SUFFIXES := .out .a .ln .o .c .cc .C .cpp .p .f .F .m .r .y .l .ym .yl .s .S .mod .sym .def .h .info .dvi .tex .texinfo .texi .txinfo .w .ch .web .sh .elc .el
# default
COMPILE.c = $(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c
# default
COMPILE.s = $(AS) $(ASFLAGS) $(TARGET_MACH)
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# default
MAKEINFO = makeinfo
# environment
THEOS = /root/theos/
# default
MAKE_TERMERR := /dev/tty1
# default
OBJC = cc
# default
TEX = tex
# environment
LANG = en_AU.UTF-8
# environment
TERM = xterm
# default
F77FLAGS = $(FFLAGS)
# default
LINK.f = $(FC) $(FFLAGS) $(LDFLAGS) $(TARGET_ARCH)
# variable set hash-table stats:
# Load=159/1024=16%, Rehash=0, Collisions=33/259=13%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# SCCS: could not be stat'd.
# makefiles/lib (device 13, inode 8162774325625428): 4 files, 19 impossibilities.
# /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga (device 13, inode 281474978135354): 9 files, 6 impossibilities.
# makefiles/lib/SCCS: could not be stat'd.
# /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/SCCS: could not be stat'd.
# makefiles/lib/RCS: could not be stat'd.
# /mnt/c/Dev/node_modules/react-native/Libraries/: could not be stat'd.
# makefiles (device 13, inode 12384898976284958): 29 files, 19 impossibilities.
# /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/RCS: could not be stat'd.
# /mnt/c/Dev/XcodeProjectDumper/build/intermediate (device 13, inode 5629499535232234): 6 files, no impossibilities.
# ./build/intermediate/yoga (device 13, inode 9851624184875848): 4 files, no impossibilities.
# makefiles/SCCS: could not be stat'd.
# makefiles/RCS: could not be stat'd.
# RCS: could not be stat'd.

# 52 files, 44 impossibilities in 14 directories.

# Implicit Rules

%.out:

%.a:

%.ln:

%.o:

%: %.o
#  recipe to execute (built-in):
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.c:

%: %.c
#  recipe to execute (built-in):
	$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.ln: %.c
#  recipe to execute (built-in):
	$(LINT.c) -C$* $<

%.o: %.c
#  recipe to execute (built-in):
	$(COMPILE.c) $(OUTPUT_OPTION) $<

%.cc:

%: %.cc
#  recipe to execute (built-in):
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.cc
#  recipe to execute (built-in):
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

%.C:

%: %.C
#  recipe to execute (built-in):
	$(LINK.C) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.C
#  recipe to execute (built-in):
	$(COMPILE.C) $(OUTPUT_OPTION) $<

%.cpp:

%: %.cpp
#  recipe to execute (built-in):
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.cpp
#  recipe to execute (built-in):
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

%.p:

%: %.p
#  recipe to execute (built-in):
	$(LINK.p) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.p
#  recipe to execute (built-in):
	$(COMPILE.p) $(OUTPUT_OPTION) $<

%.f:

%: %.f
#  recipe to execute (built-in):
	$(LINK.f) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.f
#  recipe to execute (built-in):
	$(COMPILE.f) $(OUTPUT_OPTION) $<

%.F:

%: %.F
#  recipe to execute (built-in):
	$(LINK.F) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.F
#  recipe to execute (built-in):
	$(COMPILE.F) $(OUTPUT_OPTION) $<

%.f: %.F
#  recipe to execute (built-in):
	$(PREPROCESS.F) $(OUTPUT_OPTION) $<

%.m:

%: %.m
#  recipe to execute (built-in):
	$(LINK.m) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.m
#  recipe to execute (built-in):
	$(COMPILE.m) $(OUTPUT_OPTION) $<

%.r:

%: %.r
#  recipe to execute (built-in):
	$(LINK.r) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.r
#  recipe to execute (built-in):
	$(COMPILE.r) $(OUTPUT_OPTION) $<

%.f: %.r
#  recipe to execute (built-in):
	$(PREPROCESS.r) $(OUTPUT_OPTION) $<

%.y:

%.ln: %.y
#  recipe to execute (built-in):
	$(YACC.y) $< 
	 $(LINT.c) -C$* y.tab.c 
	 $(RM) y.tab.c

%.c: %.y
#  recipe to execute (built-in):
	$(YACC.y) $< 
	 mv -f y.tab.c $@

%.l:

%.ln: %.l
#  recipe to execute (built-in):
	@$(RM) $*.c
	 $(LEX.l) $< > $*.c
	$(LINT.c) -i $*.c -o $@
	 $(RM) $*.c

%.c: %.l
#  recipe to execute (built-in):
	@$(RM) $@ 
	 $(LEX.l) $< > $@

%.r: %.l
#  recipe to execute (built-in):
	$(LEX.l) $< > $@ 
	 mv -f lex.yy.r $@

%.ym:

%.m: %.ym
#  recipe to execute (built-in):
	$(YACC.m) $< 
	 mv -f y.tab.c $@

%.yl:

%.s:

%: %.s
#  recipe to execute (built-in):
	$(LINK.s) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.s
#  recipe to execute (built-in):
	$(COMPILE.s) -o $@ $<

%.S:

%: %.S
#  recipe to execute (built-in):
	$(LINK.S) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.S
#  recipe to execute (built-in):
	$(COMPILE.S) -o $@ $<

%.s: %.S
#  recipe to execute (built-in):
	$(PREPROCESS.S) $< > $@

%.mod:

%: %.mod
#  recipe to execute (built-in):
	$(COMPILE.mod) -o $@ -e $@ $^

%.o: %.mod
#  recipe to execute (built-in):
	$(COMPILE.mod) -o $@ $<

%.sym:

%.def:

%.sym: %.def
#  recipe to execute (built-in):
	$(COMPILE.def) -o $@ $<

%.h:

%.info:

%.dvi:

%.tex:

%.dvi: %.tex
#  recipe to execute (built-in):
	$(TEX) $<

%.texinfo:

%.info: %.texinfo
#  recipe to execute (built-in):
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.texinfo
#  recipe to execute (built-in):
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.texi:

%.info: %.texi
#  recipe to execute (built-in):
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.texi
#  recipe to execute (built-in):
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.txinfo:

%.info: %.txinfo
#  recipe to execute (built-in):
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

%.dvi: %.txinfo
#  recipe to execute (built-in):
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

%.w:

%.c: %.w
#  recipe to execute (built-in):
	$(CTANGLE) $< - $@

%.tex: %.w
#  recipe to execute (built-in):
	$(CWEAVE) $< - $@

%.ch:

%.web:

%.p: %.web
#  recipe to execute (built-in):
	$(TANGLE) $<

%.tex: %.web
#  recipe to execute (built-in):
	$(WEAVE) $<

%.sh:

%: %.sh
#  recipe to execute (built-in):
	cat $< >$@ 
	 chmod a+x $@

%.elc:

%.el:

(%): %
#  recipe to execute (built-in):
	$(AR) $(ARFLAGS) $@ $<

%.out: %
#  recipe to execute (built-in):
	@rm -f $@ 
	 cp $< $@

%.c: %.w %.ch
#  recipe to execute (built-in):
	$(CTANGLE) $^ $@

%.tex: %.w %.ch
#  recipe to execute (built-in):
	$(CWEAVE) $^ $@

%:: %,v
#  recipe to execute (built-in):
	$(CHECKOUT,v)

%:: RCS/%,v
#  recipe to execute (built-in):
	$(CHECKOUT,v)

%:: RCS/%
#  recipe to execute (built-in):
	$(CHECKOUT,v)

%:: s.%
#  recipe to execute (built-in):
	$(GET) $(GFLAGS) $(SCCS_OUTPUT_OPTION) $<

%:: SCCS/s.%
#  recipe to execute (built-in):
	$(GET) $(GFLAGS) $(SCCS_OUTPUT_OPTION) $<

# 92 implicit rules, 5 (5.4%) terminal.

# Files

# Not a target:
/mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.c:
#  Implicit rule search has been done.
#  Last modified 2017-03-10 13:21:40.3055667
#  File has been updated.
#  Successfully updated.

# Not a target:
.web.p:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(TANGLE) $<

# Not a target:
.l.r:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LEX.l) $< > $@ 
	 mv -f lex.yy.r $@

# Not a target:
.dvi:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.ym:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.f.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.f) $(OUTPUT_OPTION) $<

# Not a target:
.l:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.m:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.m) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.ln:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.o) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.y:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.def.sym:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.def) -o $@ $<

build/intermediate/yoga/: | build/intermediate/yoga build/intermediate/yoga
#  Implicit rule search has not been done.
#  Last modified 2017-03-13 20:41:22.2510569
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefiles/yoga.mk', line 38):
	@echo Building obj-c files for yoga
	$(CC_COMPILER) $(YOGA_C_COMPILER_FLAGS) -c $(filter %/$(notdir $(patsubst  %.m.o, %.m, $@ )), $(YOGA_OBJC_FILES)) -o $@

# Not a target:
.p.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.p) $(OUTPUT_OPTION) $<

# Not a target:
.p:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.p) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.txinfo.dvi:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

# Not a target:
.a:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.yl:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.l.ln:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	@$(RM) $*.c
	 $(LEX.l) $< > $*.c
	$(LINT.c) -i $*.c -o $@
	 $(RM) $*.c

# Not a target:
.F.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.F) $(OUTPUT_OPTION) $<

# Not a target:
.texi.info:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

# Not a target:
.w.c:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(CTANGLE) $< - $@

# Not a target:
.texi.dvi:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

# Not a target:
.ch:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.m.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.m) $(OUTPUT_OPTION) $<

# Not a target:
.cc:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.cc) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.cc.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.cc) $(OUTPUT_OPTION) $<

# Not a target:
.def:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES: .out .a .ln .o .c .cc .C .cpp .p .f .F .m .r .y .l .ym .yl .s .S .mod .sym .def .h .info .dvi .tex .texinfo .texi .txinfo .w .ch .web .sh .elc .el
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.c.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.c) $(OUTPUT_OPTION) $<

# Not a target:
.r.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.r) $(OUTPUT_OPTION) $<

# Not a target:
.r:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.r) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.ym.m:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(YACC.m) $< 
	 mv -f y.tab.c $@

# Not a target:
.y.ln:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(YACC.y) $< 
	 $(LINT.c) -C$* y.tab.c 
	 $(RM) y.tab.c

# Not a target:
.elc:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.l.c:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	@$(RM) $@ 
	 $(LEX.l) $< > $@

# Not a target:
.out:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.C:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.C) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.r.f:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(PREPROCESS.r) $(OUTPUT_OPTION) $<

build/intermediate/yoga/Yoga.c.o: /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/YGNodeList.c /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.c | build/intermediate/yoga
#  Implicit rule search has not been done.
#  Last modified 2017-03-13 20:41:22.2500534
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefiles/yoga.mk', line 30):
	@echo Building c files for yoga
	$(CC_COMPILER) $(YOGA_C_COMPILER_FLAGS) -c $(filter %/$(notdir $(patsubst  %.c.o, %.c, $@ )), $(YOGA_C_FILES)) -o $@

# Not a target:
.S:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.S) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.texinfo.info:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

# Not a target:
.c:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.c) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.w.tex:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(CWEAVE) $< - $@

# Not a target:
.c.ln:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINT.c) -C$* $<

# Not a target:
.s.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.s) -o $@ $<

# Not a target:
.s:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.s) $^ $(LOADLIBES) $(LDLIBS) -o $@

build/intermediate/yoga:
#  Implicit rule search has not been done.
#  Last modified 2017-03-13 20:41:22.2510569
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefiles/yoga.mk', line 28):
	mkdir -p $(YOGA_OBJ_DIR) 

# Not a target:
/mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/YGNodeList.c:
#  Implicit rule search has been done.
#  Last modified 2017-03-10 13:21:40.2770633
#  File has been updated.
#  Successfully updated.

# Not a target:
.texinfo.dvi:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(TEXI2DVI) $(TEXI2DVI_FLAGS) $<

# Not a target:
.el:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGEnums.h:
#  Implicit rule search has not been done.
#  Last modified 2017-03-13 10:10:57.4281012
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefiles/yoga.mk', line 22):
	@echo Generating Header Folder
	mkdir -p $(YOGA_COPY_HEADERS_DEST)
	@echo Copying headers...
	-@ cp --target-directory=$(YOGA_COPY_HEADERS_DEST) $(YOGA_COPY_HEADERS_SRC)
	

# Not a target:
.lm.m:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	@$(RM) $@ 
	 $(LEX.m) $< > $@

# Not a target:
.y.c:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(YACC.y) $< 
	 mv -f y.tab.c $@

# Not a target:
.web.tex:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(WEAVE) $<

# Not a target:
.texinfo:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.h:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.tex.dvi:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(TEX) $<

libyoga.a: /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGEnums.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGMacros.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/Yoga.h build/intermediate/yoga/ build/intermediate/yoga/YGNodeList.c.o build/intermediate/yoga/Yoga.c.o build/intermediate/yoga/
#  Command line target.
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: 'libyoga'
#  File does not exist.
#  File has been updated.
#  Successfully updated.
# automatic
# @ := libyoga.a
# automatic
# % := 
# automatic
# * := libyoga
# automatic
# + := /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGEnums.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGMacros.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/Yoga.h build/intermediate/yoga/ build/intermediate/yoga/YGNodeList.c.o build/intermediate/yoga/Yoga.c.o build/intermediate/yoga/
# automatic
# | := 
# automatic
# < := /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGEnums.h
# automatic
# ^ := /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGEnums.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGMacros.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/Yoga.h build/intermediate/yoga/ build/intermediate/yoga/YGNodeList.c.o build/intermediate/yoga/Yoga.c.o
# automatic
# ? := /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGEnums.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGMacros.h /mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/Yoga.h build/intermediate/yoga/ build/intermediate/yoga/YGNodeList.c.o build/intermediate/yoga/Yoga.c.o
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=3/24=12%
#  recipe to execute (from 'makefiles/yoga.mk', line 42):
	@echo Linking files to become: libyoga.a 
	@ mkdir -p $(L_OUTPUT_DIR)
	$(LINKER) $(FRAMEWORKS) $(LINKER_FLAGS) -o $(L_OUTPUT_DIR)/libyoga.a $(wildcard $(YOGA_OBJ_DIR)/*.o )
	

# Not a target:
.cpp.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.cpp) $(OUTPUT_OPTION) $<

# Not a target:
.cpp:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.cpp) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.C.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.C) $(OUTPUT_OPTION) $<

# Not a target:
.texi:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.txinfo:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.tex:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
makefiles/yoga.mk:
#  Implicit rule search has been done.
#  Last modified 2017-03-13 20:55:56.3931612
#  File has been updated.
#  Successfully updated.

# Not a target:
.txinfo.info:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(MAKEINFO) $(MAKEINFO_FLAGS) $< -o $@

# Not a target:
.sh:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	cat $< >$@ 
	 chmod a+x $@

# Not a target:
.S.s:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(PREPROCESS.S) $< > $@

# Not a target:
.mod:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.mod) -o $@ -e $@ $^

# Not a target:
.mod.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.mod) -o $@ $<

# Not a target:
.F.f:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(PREPROCESS.F) $(OUTPUT_OPTION) $<

# Not a target:
.w:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.S.o:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(COMPILE.S) -o $@ $<

# Not a target:
makefiles/lib/common.mk:
#  Implicit rule search has been done.
#  Last modified 2017-03-13 20:29:59.9081456
#  File has been updated.
#  Successfully updated.

# Not a target:
.F:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.F) $^ $(LOADLIBES) $(LDLIBS) -o $@

/mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/YGMacros.h:
#  Implicit rule search has not been done.
#  Last modified 2017-03-13 10:10:57.4371084
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefiles/yoga.mk', line 22):
	@echo Generating Header Folder
	mkdir -p $(YOGA_COPY_HEADERS_DEST)
	@echo Copying headers...
	-@ cp --target-directory=$(YOGA_COPY_HEADERS_DEST) $(YOGA_COPY_HEADERS_SRC)
	

# Not a target:
.web:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build/intermediate/yoga/YGNodeList.c.o: /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/YGNodeList.c /mnt/c/Dev/XcodeProjectDumper/node_modules/react-native/ReactCommon/yoga/yoga/Yoga.c | build/intermediate/yoga
#  Implicit rule search has not been done.
#  Last modified 2017-03-13 20:41:21.8364438
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefiles/yoga.mk', line 30):
	@echo Building c files for yoga
	$(CC_COMPILER) $(YOGA_C_COMPILER_FLAGS) -c $(filter %/$(notdir $(patsubst  %.c.o, %.c, $@ )), $(YOGA_C_FILES)) -o $@

# Not a target:
.sym:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.f:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (built-in):
	$(LINK.f) $^ $(LOADLIBES) $(LDLIBS) -o $@

# Not a target:
.info:
#  Builtin rule
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

/mnt/c/Dev/XcodeProjectDumper/build/intermediate/include/yoga/Yoga.h:
#  Implicit rule search has not been done.
#  Last modified 2017-03-13 10:10:57.4581156
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'makefiles/yoga.mk', line 22):
	@echo Generating Header Folder
	mkdir -p $(YOGA_COPY_HEADERS_DEST)
	@echo Copying headers...
	-@ cp --target-directory=$(YOGA_COPY_HEADERS_DEST) $(YOGA_COPY_HEADERS_SRC)
	

# files hash-table stats:
# Load=84/1024=8%, Rehash=0, Collisions=436/1711=25%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 2 (1) / strings = 514 / storage = 13322 B / avg = 25 B
# current buf: size = 8162 B / used = 5174 B / count = 90 / avg = 57 B
# other used: total = 5160 B / count = 424 / avg = 12 B
# other free: total = 14 B / max = 14 B / min = 14 B / avg = 14 B

# strcache performance: lookups = 777 / hit rate = 33%
# hash-table stats:
# Load=514/8192=6%, Rehash=0, Collisions=184/777=24%
# Finished Make data base on Mon Mar 13 20:56:12 2017

